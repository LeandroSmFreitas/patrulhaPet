plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "de.undercouch.download" version "5.3.0"
	id 'jacoco'
}


group = 'br.com.manager'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.6.2'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	testImplementation 'org.mockito:mockito-core:3.7.7'
	testImplementation 'org.mockito:mockito-junit-jupiter:3.7.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

task downloadNewrelic(type: Download) {
	mkdir 'newrelic'
	src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
	dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
	from zipTree(file('newrelic/newrelic-java.zip'))
	into rootDir
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
jacoco {
	toolVersion = "0.8.12"
}

test {
	jacoco {
		enabled = true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}
	}
}
